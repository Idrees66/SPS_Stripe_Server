import express, { Request, Response, NextFunction } from 'express'
import cors from 'cors'
import bodyParser from 'body-parser'
import { Stripe } from 'stripe'
import {v4 as uuidv4} from 'uuid'
 
const stripe = new Stripe('sk_test_51HqIPXBUVYzZ5LzZm2lHLjZiltgle4hjrDfwzElaPurcw0Iwj2sqO9l0rbJspcnv1lY0pVzgRU3J1F8tUbjTcvGa00vTmiaK77',
  {
    apiVersion: '2020-08-27',
  })
 
 const app = express()
 app.use(cors())
 app.use(bodyParser.json())
  
interface Product {
    description: string,
    amount: number
}
app.post('/payment', async (req: Request, res: Response, next: NextFunction) => {  
    const { email,product , authToken } = req.body;
    const { token } = authToken;
    const { card } = token;

    console.log(card); 
    console.log("============================================== payment initiate =======================")
    const userProduct = product as Product;

    // unique ID generated by client
     const idempotencyKey = uuidv4()

     try {
         const customer = await stripe.customers.create({
             email: email,
             source: token.id
         })
         console.log('Customer Created.....')
         console.log(customer)
         
         const response = await stripe.charges.create({
             amount: userProduct.amount * 100,
             currency: 'PKR',
             customer: customer.id,
             receipt_email: email,
             description: userProduct.description,
             shipping: {
                 name: card.name,
                 address: {
                     line1: "Islamabad",
                     country: card.address_country,
                  }
             }
     
         },{ idempotencyKey: idempotencyKey})

         console.log("charge response")
         console.log(response)
         console.log("Reciept Url: ",response.receipt_url)
         res.json(response)   
     } catch (err) {
        console.log("=========================================== error ==========================")
        console.log(err)
        res.json(err)
     }
})
app.use('/', (req, res, next) => {  
    res.json('I am Running Successfully...')
})
app.listen(8000, () => {    
    console.log('Listening to port 8000')
})

